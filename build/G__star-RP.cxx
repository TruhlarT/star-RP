//
// File generated by rootcint at Wed Dec 19 23:23:32 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__starmIRP
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__star-RP.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StRpsTrackPoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsTrackPoint(void *p = 0);
   static void *newArray_StRpsTrackPoint(Long_t size, void *p);
   static void delete_StRpsTrackPoint(void *p);
   static void deleteArray_StRpsTrackPoint(void *p);
   static void destruct_StRpsTrackPoint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsTrackPoint*)
   {
      ::StRpsTrackPoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsTrackPoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsTrackPoint", ::StRpsTrackPoint::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsTrackPoint.h", 29,
                  typeid(::StRpsTrackPoint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsTrackPoint::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsTrackPoint) );
      instance.SetNew(&new_StRpsTrackPoint);
      instance.SetNewArray(&newArray_StRpsTrackPoint);
      instance.SetDelete(&delete_StRpsTrackPoint);
      instance.SetDeleteArray(&deleteArray_StRpsTrackPoint);
      instance.SetDestructor(&destruct_StRpsTrackPoint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsTrackPoint*)
   {
      return GenerateInitInstanceLocal((::StRpsTrackPoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsTrackPoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsPreTrackPoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsPreTrackPoint(void *p = 0);
   static void *newArray_StRpsPreTrackPoint(Long_t size, void *p);
   static void delete_StRpsPreTrackPoint(void *p);
   static void deleteArray_StRpsPreTrackPoint(void *p);
   static void destruct_StRpsPreTrackPoint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsPreTrackPoint*)
   {
      ::StRpsPreTrackPoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsPreTrackPoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsPreTrackPoint", ::StRpsPreTrackPoint::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsPreTrackPoint.h", 11,
                  typeid(::StRpsPreTrackPoint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsPreTrackPoint::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsPreTrackPoint) );
      instance.SetNew(&new_StRpsPreTrackPoint);
      instance.SetNewArray(&newArray_StRpsPreTrackPoint);
      instance.SetDelete(&delete_StRpsPreTrackPoint);
      instance.SetDeleteArray(&deleteArray_StRpsPreTrackPoint);
      instance.SetDestructor(&destruct_StRpsPreTrackPoint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsPreTrackPoint*)
   {
      return GenerateInitInstanceLocal((::StRpsPreTrackPoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsPreTrackPoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsTrack(void *p = 0);
   static void *newArray_StRpsTrack(Long_t size, void *p);
   static void delete_StRpsTrack(void *p);
   static void deleteArray_StRpsTrack(void *p);
   static void destruct_StRpsTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsTrack*)
   {
      ::StRpsTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsTrack", ::StRpsTrack::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsTrack.h", 41,
                  typeid(::StRpsTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsTrack::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsTrack) );
      instance.SetNew(&new_StRpsTrack);
      instance.SetNewArray(&newArray_StRpsTrack);
      instance.SetDelete(&delete_StRpsTrack);
      instance.SetDeleteArray(&deleteArray_StRpsTrack);
      instance.SetDestructor(&destruct_StRpsTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsTrack*)
   {
      return GenerateInitInstanceLocal((::StRpsTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsPreTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsPreTrack(void *p = 0);
   static void *newArray_StRpsPreTrack(Long_t size, void *p);
   static void delete_StRpsPreTrack(void *p);
   static void deleteArray_StRpsPreTrack(void *p);
   static void destruct_StRpsPreTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsPreTrack*)
   {
      ::StRpsPreTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsPreTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsPreTrack", ::StRpsPreTrack::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsPreTrack.h", 14,
                  typeid(::StRpsPreTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsPreTrack::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsPreTrack) );
      instance.SetNew(&new_StRpsPreTrack);
      instance.SetNewArray(&newArray_StRpsPreTrack);
      instance.SetDelete(&delete_StRpsPreTrack);
      instance.SetDeleteArray(&deleteArray_StRpsPreTrack);
      instance.SetDestructor(&destruct_StRpsPreTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsPreTrack*)
   {
      return GenerateInitInstanceLocal((::StRpsPreTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsPreTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsCollection(void *p = 0);
   static void *newArray_StRpsCollection(Long_t size, void *p);
   static void delete_StRpsCollection(void *p);
   static void deleteArray_StRpsCollection(void *p);
   static void destruct_StRpsCollection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsCollection*)
   {
      ::StRpsCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsCollection", ::StRpsCollection::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsCollection.h", 35,
                  typeid(::StRpsCollection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsCollection::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsCollection) );
      instance.SetNew(&new_StRpsCollection);
      instance.SetNewArray(&newArray_StRpsCollection);
      instance.SetDelete(&delete_StRpsCollection);
      instance.SetDeleteArray(&deleteArray_StRpsCollection);
      instance.SetDestructor(&destruct_StRpsCollection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsCollection*)
   {
      return GenerateInitInstanceLocal((::StRpsCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsPreCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsPreCollection(void *p = 0);
   static void *newArray_StRpsPreCollection(Long_t size, void *p);
   static void delete_StRpsPreCollection(void *p);
   static void deleteArray_StRpsPreCollection(void *p);
   static void destruct_StRpsPreCollection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsPreCollection*)
   {
      ::StRpsPreCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsPreCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsPreCollection", ::StRpsPreCollection::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsPreCollection.h", 19,
                  typeid(::StRpsPreCollection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsPreCollection::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsPreCollection) );
      instance.SetNew(&new_StRpsPreCollection);
      instance.SetNewArray(&newArray_StRpsPreCollection);
      instance.SetDelete(&delete_StRpsPreCollection);
      instance.SetDeleteArray(&deleteArray_StRpsPreCollection);
      instance.SetDestructor(&destruct_StRpsPreCollection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsPreCollection*)
   {
      return GenerateInitInstanceLocal((::StRpsPreCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsPreCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsPlane(void *p = 0);
   static void *newArray_StRpsPlane(Long_t size, void *p);
   static void delete_StRpsPlane(void *p);
   static void deleteArray_StRpsPlane(void *p);
   static void destruct_StRpsPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsPlane*)
   {
      ::StRpsPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsPlane", ::StRpsPlane::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsPlane.h", 29,
                  typeid(::StRpsPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsPlane::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsPlane) );
      instance.SetNew(&new_StRpsPlane);
      instance.SetNewArray(&newArray_StRpsPlane);
      instance.SetDelete(&delete_StRpsPlane);
      instance.SetDeleteArray(&deleteArray_StRpsPlane);
      instance.SetDestructor(&destruct_StRpsPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsPlane*)
   {
      return GenerateInitInstanceLocal((::StRpsPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsCluster(void *p = 0);
   static void *newArray_StRpsCluster(Long_t size, void *p);
   static void delete_StRpsCluster(void *p);
   static void deleteArray_StRpsCluster(void *p);
   static void destruct_StRpsCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsCluster*)
   {
      ::StRpsCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsCluster", ::StRpsCluster::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsCluster.h", 29,
                  typeid(::StRpsCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsCluster::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsCluster) );
      instance.SetNew(&new_StRpsCluster);
      instance.SetNewArray(&newArray_StRpsCluster);
      instance.SetDelete(&delete_StRpsCluster);
      instance.SetDeleteArray(&deleteArray_StRpsCluster);
      instance.SetDestructor(&destruct_StRpsCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsCluster*)
   {
      return GenerateInitInstanceLocal((::StRpsCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRpsRomanPot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRpsRomanPot(void *p = 0);
   static void *newArray_StRpsRomanPot(Long_t size, void *p);
   static void delete_StRpsRomanPot(void *p);
   static void deleteArray_StRpsRomanPot(void *p);
   static void destruct_StRpsRomanPot(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRpsRomanPot*)
   {
      ::StRpsRomanPot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRpsRomanPot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRpsRomanPot", ::StRpsRomanPot::Class_Version(), "/home/truhlar/Desktop/STAR/VU/star-RP/include/StRpsRomanPot.h", 26,
                  typeid(::StRpsRomanPot), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRpsRomanPot::Dictionary, isa_proxy, 4,
                  sizeof(::StRpsRomanPot) );
      instance.SetNew(&new_StRpsRomanPot);
      instance.SetNewArray(&newArray_StRpsRomanPot);
      instance.SetDelete(&delete_StRpsRomanPot);
      instance.SetDeleteArray(&deleteArray_StRpsRomanPot);
      instance.SetDestructor(&destruct_StRpsRomanPot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRpsRomanPot*)
   {
      return GenerateInitInstanceLocal((::StRpsRomanPot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRpsRomanPot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StRpsTrackPoint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsTrackPoint::Class_Name()
{
   return "StRpsTrackPoint";
}

//______________________________________________________________________________
const char *StRpsTrackPoint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrackPoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsTrackPoint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrackPoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsTrackPoint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrackPoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsTrackPoint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrackPoint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsPreTrackPoint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsPreTrackPoint::Class_Name()
{
   return "StRpsPreTrackPoint";
}

//______________________________________________________________________________
const char *StRpsPreTrackPoint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrackPoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsPreTrackPoint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrackPoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsPreTrackPoint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrackPoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsPreTrackPoint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrackPoint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsTrack::Class_Name()
{
   return "StRpsTrack";
}

//______________________________________________________________________________
const char *StRpsTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsPreTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsPreTrack::Class_Name()
{
   return "StRpsPreTrack";
}

//______________________________________________________________________________
const char *StRpsPreTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsPreTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsPreTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsPreTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsCollection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsCollection::Class_Name()
{
   return "StRpsCollection";
}

//______________________________________________________________________________
const char *StRpsCollection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsCollection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsCollection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsCollection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCollection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsPreCollection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsPreCollection::Class_Name()
{
   return "StRpsPreCollection";
}

//______________________________________________________________________________
const char *StRpsPreCollection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsPreCollection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsPreCollection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsPreCollection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPreCollection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsPlane::Class_Name()
{
   return "StRpsPlane";
}

//______________________________________________________________________________
const char *StRpsPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsCluster::Class_Name()
{
   return "StRpsCluster";
}

//______________________________________________________________________________
const char *StRpsCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRpsRomanPot::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRpsRomanPot::Class_Name()
{
   return "StRpsRomanPot";
}

//______________________________________________________________________________
const char *StRpsRomanPot::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsRomanPot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRpsRomanPot::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsRomanPot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRpsRomanPot::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsRomanPot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRpsRomanPot::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRpsRomanPot*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StRpsPreCollection::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsPreCollection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsPreCollection::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsPreCollection::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsPreCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsPreCollection.
      TClass *R__cl = ::StRpsPreCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSiliconBunch", &mSiliconBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberPlanes[8]", mNumberPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberPlanesWithClusters[8]", mNumberPlanesWithClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatusRomanPot[8]", mStatusRomanPot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mADC[8][2]", mADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTAC[8][2]", mTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOffsetPlane[8][4]", mOffsetPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mzPlane[8][4]", mzPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAnglePlane[8][4]", mAnglePlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOrientationPlane[8][4]", mOrientationPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatusPlane[8][4]", mStatusPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberOfClusters[8][4]", mNumberOfClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPositionCluster[8][4]", mPositionCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPositionRMSCluster[8][4]", mPositionRMSCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLengthCluster[8][4]", mLengthCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergyCluster[8][4]", mEnergyCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXYCluster[8][4]", mXYCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQualityCluster[8][4]", mQualityCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrackPoints", (void*)&mTrackPoints);
      R__insp.InspectMember("vector<StRpsPreTrackPoint*>", (void*)&mTrackPoints, "mTrackPoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTracks", (void*)&mTracks);
      R__insp.InspectMember("vector<StRpsPreTrack*>", (void*)&mTracks, "mTracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrackPointsMap", (void*)&mTrackPointsMap);
      R__insp.InspectMember("map<StRpsTrackPoint*,StRpsPreTrackPoint*>", (void*)&mTrackPointsMap, "mTrackPointsMap.", true);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsPreCollection(void *p) {
      return  p ? new(p) ::StRpsPreCollection : new ::StRpsPreCollection;
   }
   static void *newArray_StRpsPreCollection(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsPreCollection[nElements] : new ::StRpsPreCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsPreCollection(void *p) {
      delete ((::StRpsPreCollection*)p);
   }
   static void deleteArray_StRpsPreCollection(void *p) {
      delete [] ((::StRpsPreCollection*)p);
   }
   static void destruct_StRpsPreCollection(void *p) {
      typedef ::StRpsPreCollection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsPreCollection

//______________________________________________________________________________
void StRpsPreTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsPreTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsPreTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsPreTrack::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsPreTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsPreTrack.
      TClass *R__cl = ::StRpsPreTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrackPoints[2]", mTrackPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mP", &mP);
      R__insp.InspectMember(mP, "mP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBranch", &mBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mType", &mType);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsPreTrack(void *p) {
      return  p ? new(p) ::StRpsPreTrack : new ::StRpsPreTrack;
   }
   static void *newArray_StRpsPreTrack(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsPreTrack[nElements] : new ::StRpsPreTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsPreTrack(void *p) {
      delete ((::StRpsPreTrack*)p);
   }
   static void deleteArray_StRpsPreTrack(void *p) {
      delete [] ((::StRpsPreTrack*)p);
   }
   static void destruct_StRpsPreTrack(void *p) {
      typedef ::StRpsPreTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsPreTrack

//______________________________________________________________________________
void StRpsPreTrackPoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsPreTrackPoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsPreTrackPoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsPreTrackPoint::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsPreTrackPoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsPreTrackPoint.
      TClass *R__cl = ::StRpsPreTrackPoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosition", &mPosition);
      R__insp.InspectMember(mPosition, "mPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRpId", &mRpId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mClusterId[4]", mClusterId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuality", &mQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTime[2]", mTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsPreTrackPoint(void *p) {
      return  p ? new(p) ::StRpsPreTrackPoint : new ::StRpsPreTrackPoint;
   }
   static void *newArray_StRpsPreTrackPoint(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsPreTrackPoint[nElements] : new ::StRpsPreTrackPoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsPreTrackPoint(void *p) {
      delete ((::StRpsPreTrackPoint*)p);
   }
   static void deleteArray_StRpsPreTrackPoint(void *p) {
      delete [] ((::StRpsPreTrackPoint*)p);
   }
   static void destruct_StRpsPreTrackPoint(void *p) {
      typedef ::StRpsPreTrackPoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsPreTrackPoint

//______________________________________________________________________________
void StRpsCollection::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsCollection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsCollection::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsCollection::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsCollection.
      TClass *R__cl = ::StRpsCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRomanPots[8]", mRomanPots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSiliconBunch", &mSiliconBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrackPoints", (void*)&mTrackPoints);
      R__insp.InspectMember("vector<StRpsTrackPoint*>", (void*)&mTrackPoints, "mTrackPoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTracks", (void*)&mTracks);
      R__insp.InspectMember("vector<StRpsTrack*>", (void*)&mTracks, "mTracks.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsCollection(void *p) {
      return  p ? new(p) ::StRpsCollection : new ::StRpsCollection;
   }
   static void *newArray_StRpsCollection(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsCollection[nElements] : new ::StRpsCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsCollection(void *p) {
      delete ((::StRpsCollection*)p);
   }
   static void deleteArray_StRpsCollection(void *p) {
      delete [] ((::StRpsCollection*)p);
   }
   static void destruct_StRpsCollection(void *p) {
      typedef ::StRpsCollection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsCollection

//______________________________________________________________________________
void StRpsRomanPot::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsRomanPot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsRomanPot::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsRomanPot::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsRomanPot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsRomanPot.
      TClass *R__cl = ::StRpsRomanPot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPlanes[4]", mPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRomanPotId", &mRomanPotId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatus", &mStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAdc[2]", mAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTac[2]", mTac);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsRomanPot(void *p) {
      return  p ? new(p) ::StRpsRomanPot : new ::StRpsRomanPot;
   }
   static void *newArray_StRpsRomanPot(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsRomanPot[nElements] : new ::StRpsRomanPot[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsRomanPot(void *p) {
      delete ((::StRpsRomanPot*)p);
   }
   static void deleteArray_StRpsRomanPot(void *p) {
      delete [] ((::StRpsRomanPot*)p);
   }
   static void destruct_StRpsRomanPot(void *p) {
      typedef ::StRpsRomanPot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsRomanPot

//______________________________________________________________________________
void StRpsPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsPlane::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsPlane.
      TClass *R__cl = ::StRpsPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPlaneId", &mPlaneId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOffset", &mOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZ", &mZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAngle", &mAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOrientation", &mOrientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatus", &mStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRomanPotId", &mRomanPotId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mClusters", (void*)&mClusters);
      R__insp.InspectMember("vector<StRpsCluster*>", (void*)&mClusters, "mClusters.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsPlane(void *p) {
      return  p ? new(p) ::StRpsPlane : new ::StRpsPlane;
   }
   static void *newArray_StRpsPlane(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsPlane[nElements] : new ::StRpsPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsPlane(void *p) {
      delete ((::StRpsPlane*)p);
   }
   static void deleteArray_StRpsPlane(void *p) {
      delete [] ((::StRpsPlane*)p);
   }
   static void destruct_StRpsPlane(void *p) {
      typedef ::StRpsPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsPlane

//______________________________________________________________________________
void StRpsCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsCluster::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsCluster.
      TClass *R__cl = ::StRpsCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosition", &mPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPositionRMS", &mPositionRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLength", &mLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergy", &mEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXY", &mXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuality", &mQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPlaneId", &mPlaneId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRomanPotId", &mRomanPotId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsCluster(void *p) {
      return  p ? new(p) ::StRpsCluster : new ::StRpsCluster;
   }
   static void *newArray_StRpsCluster(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsCluster[nElements] : new ::StRpsCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsCluster(void *p) {
      delete ((::StRpsCluster*)p);
   }
   static void deleteArray_StRpsCluster(void *p) {
      delete [] ((::StRpsCluster*)p);
   }
   static void destruct_StRpsCluster(void *p) {
      typedef ::StRpsCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsCluster

//______________________________________________________________________________
void StRpsTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsTrack::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsTrack.
      TClass *R__cl = ::StRpsTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrackPoints", (void*)&mTrackPoints);
      R__insp.InspectMember("vector<StRpsTrackPoint*>", (void*)&mTrackPoints, "mTrackPoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mP", &mP);
      R__insp.InspectMember(mP, "mP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBranch", &mBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mType", &mType);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsTrack(void *p) {
      return  p ? new(p) ::StRpsTrack : new ::StRpsTrack;
   }
   static void *newArray_StRpsTrack(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsTrack[nElements] : new ::StRpsTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsTrack(void *p) {
      delete ((::StRpsTrack*)p);
   }
   static void deleteArray_StRpsTrack(void *p) {
      delete [] ((::StRpsTrack*)p);
   }
   static void destruct_StRpsTrack(void *p) {
      typedef ::StRpsTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsTrack

//______________________________________________________________________________
void StRpsTrackPoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRpsTrackPoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRpsTrackPoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRpsTrackPoint::Class(),this);
   }
}

//______________________________________________________________________________
void StRpsTrackPoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRpsTrackPoint.
      TClass *R__cl = ::StRpsTrackPoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRpId", &mRpId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mClusterId[4]", mClusterId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTime[2]", mTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosition", &mPosition);
      R__insp.InspectMember(mPosition, "mPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuality", &mQuality);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRpsTrackPoint(void *p) {
      return  p ? new(p) ::StRpsTrackPoint : new ::StRpsTrackPoint;
   }
   static void *newArray_StRpsTrackPoint(Long_t nElements, void *p) {
      return p ? new(p) ::StRpsTrackPoint[nElements] : new ::StRpsTrackPoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRpsTrackPoint(void *p) {
      delete ((::StRpsTrackPoint*)p);
   }
   static void deleteArray_StRpsTrackPoint(void *p) {
      delete [] ((::StRpsTrackPoint*)p);
   }
   static void destruct_StRpsTrackPoint(void *p) {
      typedef ::StRpsTrackPoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRpsTrackPoint

namespace ROOTDict {
   void vectorlEStRpsClustermUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStRpsClustermUgR_Dictionary();
   static void *new_vectorlEStRpsClustermUgR(void *p = 0);
   static void *newArray_vectorlEStRpsClustermUgR(Long_t size, void *p);
   static void delete_vectorlEStRpsClustermUgR(void *p);
   static void deleteArray_vectorlEStRpsClustermUgR(void *p);
   static void destruct_vectorlEStRpsClustermUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StRpsCluster*>*)
   {
      vector<StRpsCluster*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StRpsCluster*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StRpsCluster*>", -2, "/usr/lib/x86_64-linux-gnu/root5.34/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StRpsCluster*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStRpsClustermUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StRpsCluster*>) );
      instance.SetNew(&new_vectorlEStRpsClustermUgR);
      instance.SetNewArray(&newArray_vectorlEStRpsClustermUgR);
      instance.SetDelete(&delete_vectorlEStRpsClustermUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStRpsClustermUgR);
      instance.SetDestructor(&destruct_vectorlEStRpsClustermUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StRpsCluster*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StRpsCluster*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStRpsClustermUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StRpsCluster*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStRpsClustermUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsCluster*> : new vector<StRpsCluster*>;
   }
   static void *newArray_vectorlEStRpsClustermUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsCluster*>[nElements] : new vector<StRpsCluster*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStRpsClustermUgR(void *p) {
      delete ((vector<StRpsCluster*>*)p);
   }
   static void deleteArray_vectorlEStRpsClustermUgR(void *p) {
      delete [] ((vector<StRpsCluster*>*)p);
   }
   static void destruct_vectorlEStRpsClustermUgR(void *p) {
      typedef vector<StRpsCluster*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StRpsCluster*>

namespace ROOTDict {
   void vectorlEStRpsPreTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStRpsPreTrackmUgR_Dictionary();
   static void *new_vectorlEStRpsPreTrackmUgR(void *p = 0);
   static void *newArray_vectorlEStRpsPreTrackmUgR(Long_t size, void *p);
   static void delete_vectorlEStRpsPreTrackmUgR(void *p);
   static void deleteArray_vectorlEStRpsPreTrackmUgR(void *p);
   static void destruct_vectorlEStRpsPreTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StRpsPreTrack*>*)
   {
      vector<StRpsPreTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StRpsPreTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StRpsPreTrack*>", -2, "/usr/lib/x86_64-linux-gnu/root5.34/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StRpsPreTrack*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStRpsPreTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StRpsPreTrack*>) );
      instance.SetNew(&new_vectorlEStRpsPreTrackmUgR);
      instance.SetNewArray(&newArray_vectorlEStRpsPreTrackmUgR);
      instance.SetDelete(&delete_vectorlEStRpsPreTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStRpsPreTrackmUgR);
      instance.SetDestructor(&destruct_vectorlEStRpsPreTrackmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StRpsPreTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StRpsPreTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStRpsPreTrackmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StRpsPreTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStRpsPreTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsPreTrack*> : new vector<StRpsPreTrack*>;
   }
   static void *newArray_vectorlEStRpsPreTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsPreTrack*>[nElements] : new vector<StRpsPreTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStRpsPreTrackmUgR(void *p) {
      delete ((vector<StRpsPreTrack*>*)p);
   }
   static void deleteArray_vectorlEStRpsPreTrackmUgR(void *p) {
      delete [] ((vector<StRpsPreTrack*>*)p);
   }
   static void destruct_vectorlEStRpsPreTrackmUgR(void *p) {
      typedef vector<StRpsPreTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StRpsPreTrack*>

namespace ROOTDict {
   void vectorlEStRpsPreTrackPointmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStRpsPreTrackPointmUgR_Dictionary();
   static void *new_vectorlEStRpsPreTrackPointmUgR(void *p = 0);
   static void *newArray_vectorlEStRpsPreTrackPointmUgR(Long_t size, void *p);
   static void delete_vectorlEStRpsPreTrackPointmUgR(void *p);
   static void deleteArray_vectorlEStRpsPreTrackPointmUgR(void *p);
   static void destruct_vectorlEStRpsPreTrackPointmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StRpsPreTrackPoint*>*)
   {
      vector<StRpsPreTrackPoint*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StRpsPreTrackPoint*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StRpsPreTrackPoint*>", -2, "/usr/lib/x86_64-linux-gnu/root5.34/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StRpsPreTrackPoint*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStRpsPreTrackPointmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StRpsPreTrackPoint*>) );
      instance.SetNew(&new_vectorlEStRpsPreTrackPointmUgR);
      instance.SetNewArray(&newArray_vectorlEStRpsPreTrackPointmUgR);
      instance.SetDelete(&delete_vectorlEStRpsPreTrackPointmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStRpsPreTrackPointmUgR);
      instance.SetDestructor(&destruct_vectorlEStRpsPreTrackPointmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StRpsPreTrackPoint*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StRpsPreTrackPoint*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStRpsPreTrackPointmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StRpsPreTrackPoint*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStRpsPreTrackPointmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsPreTrackPoint*> : new vector<StRpsPreTrackPoint*>;
   }
   static void *newArray_vectorlEStRpsPreTrackPointmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsPreTrackPoint*>[nElements] : new vector<StRpsPreTrackPoint*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStRpsPreTrackPointmUgR(void *p) {
      delete ((vector<StRpsPreTrackPoint*>*)p);
   }
   static void deleteArray_vectorlEStRpsPreTrackPointmUgR(void *p) {
      delete [] ((vector<StRpsPreTrackPoint*>*)p);
   }
   static void destruct_vectorlEStRpsPreTrackPointmUgR(void *p) {
      typedef vector<StRpsPreTrackPoint*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StRpsPreTrackPoint*>

namespace ROOTDict {
   void vectorlEStRpsTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStRpsTrackmUgR_Dictionary();
   static void *new_vectorlEStRpsTrackmUgR(void *p = 0);
   static void *newArray_vectorlEStRpsTrackmUgR(Long_t size, void *p);
   static void delete_vectorlEStRpsTrackmUgR(void *p);
   static void deleteArray_vectorlEStRpsTrackmUgR(void *p);
   static void destruct_vectorlEStRpsTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StRpsTrack*>*)
   {
      vector<StRpsTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StRpsTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StRpsTrack*>", -2, "/usr/lib/x86_64-linux-gnu/root5.34/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StRpsTrack*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStRpsTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StRpsTrack*>) );
      instance.SetNew(&new_vectorlEStRpsTrackmUgR);
      instance.SetNewArray(&newArray_vectorlEStRpsTrackmUgR);
      instance.SetDelete(&delete_vectorlEStRpsTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStRpsTrackmUgR);
      instance.SetDestructor(&destruct_vectorlEStRpsTrackmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StRpsTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StRpsTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStRpsTrackmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StRpsTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStRpsTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsTrack*> : new vector<StRpsTrack*>;
   }
   static void *newArray_vectorlEStRpsTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsTrack*>[nElements] : new vector<StRpsTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStRpsTrackmUgR(void *p) {
      delete ((vector<StRpsTrack*>*)p);
   }
   static void deleteArray_vectorlEStRpsTrackmUgR(void *p) {
      delete [] ((vector<StRpsTrack*>*)p);
   }
   static void destruct_vectorlEStRpsTrackmUgR(void *p) {
      typedef vector<StRpsTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StRpsTrack*>

namespace ROOTDict {
   void vectorlEStRpsTrackPointmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStRpsTrackPointmUgR_Dictionary();
   static void *new_vectorlEStRpsTrackPointmUgR(void *p = 0);
   static void *newArray_vectorlEStRpsTrackPointmUgR(Long_t size, void *p);
   static void delete_vectorlEStRpsTrackPointmUgR(void *p);
   static void deleteArray_vectorlEStRpsTrackPointmUgR(void *p);
   static void destruct_vectorlEStRpsTrackPointmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StRpsTrackPoint*>*)
   {
      vector<StRpsTrackPoint*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StRpsTrackPoint*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StRpsTrackPoint*>", -2, "/usr/lib/x86_64-linux-gnu/root5.34/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StRpsTrackPoint*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStRpsTrackPointmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StRpsTrackPoint*>) );
      instance.SetNew(&new_vectorlEStRpsTrackPointmUgR);
      instance.SetNewArray(&newArray_vectorlEStRpsTrackPointmUgR);
      instance.SetDelete(&delete_vectorlEStRpsTrackPointmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStRpsTrackPointmUgR);
      instance.SetDestructor(&destruct_vectorlEStRpsTrackPointmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StRpsTrackPoint*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StRpsTrackPoint*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStRpsTrackPointmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StRpsTrackPoint*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStRpsTrackPointmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsTrackPoint*> : new vector<StRpsTrackPoint*>;
   }
   static void *newArray_vectorlEStRpsTrackPointmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StRpsTrackPoint*>[nElements] : new vector<StRpsTrackPoint*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStRpsTrackPointmUgR(void *p) {
      delete ((vector<StRpsTrackPoint*>*)p);
   }
   static void deleteArray_vectorlEStRpsTrackPointmUgR(void *p) {
      delete [] ((vector<StRpsTrackPoint*>*)p);
   }
   static void destruct_vectorlEStRpsTrackPointmUgR(void *p) {
      typedef vector<StRpsTrackPoint*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StRpsTrackPoint*>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<short>

namespace ROOTDict {
   void vectorlEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPchargR_Dictionary();
   static void *new_vectorlEunsignedsPchargR(void *p = 0);
   static void *newArray_vectorlEunsignedsPchargR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPchargR(void *p);
   static void deleteArray_vectorlEunsignedsPchargR(void *p);
   static void destruct_vectorlEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned char>*)
   {
      vector<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned char>", -2, "vector.dll", 0,
                  typeid(vector<unsigned char>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPchargR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned char>) );
      instance.SetNew(&new_vectorlEunsignedsPchargR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPchargR);
      instance.SetDelete(&delete_vectorlEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPchargR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPchargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned char> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned char> : new vector<unsigned char>;
   }
   static void *newArray_vectorlEunsignedsPchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned char>[nElements] : new vector<unsigned char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPchargR(void *p) {
      delete ((vector<unsigned char>*)p);
   }
   static void deleteArray_vectorlEunsignedsPchargR(void *p) {
      delete [] ((vector<unsigned char>*)p);
   }
   static void destruct_vectorlEunsignedsPchargR(void *p) {
      typedef vector<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned char>

/********************************************************
* G__star-RP.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__starmIRP();

extern "C" void G__set_cpp_environmentG__starmIRP() {
  G__cpp_reset_tagtableG__starmIRP();
}
#include <new>
extern "C" int G__cpp_dllrevG__starmIRP() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StRpsTrackPoint */
static int G__G__starmIRP_456_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsTrackPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsTrackPoint[n];
     } else {
       p = new((void*) gvp) StRpsTrackPoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsTrackPoint;
     } else {
       p = new((void*) gvp) StRpsTrackPoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsTrackPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRpsTrackPoint(*(StRpsTrackPoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRpsTrackPoint(*(StRpsTrackPoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StRpsTrackPoint& obj = ((StRpsTrackPoint*) G__getstructoffset())->operator=(*(StRpsTrackPoint*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StRpsTrackPoint*) G__getstructoffset())->positionVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsTrackPoint*) G__getstructoffset())->rpId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsTrackPoint*) G__getstructoffset())->clusterId((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrackPoint*) G__getstructoffset())->time((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsTrackPoint*) G__getstructoffset())->quality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsTrackPoint*) G__getstructoffset())->planesUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrackPoint*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrackPoint*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrackPoint*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrackPoint*) G__getstructoffset())->setPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrackPoint*) G__getstructoffset())->setRpId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrackPoint*) G__getstructoffset())->setClusterId((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrackPoint*) G__getstructoffset())->setTime((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrackPoint*) G__getstructoffset())->setQuality((StRpsTrackPoint::StRpsTrackPointQuality) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsTrackPoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsTrackPoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsTrackPoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsTrackPoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrackPoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsTrackPoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsTrackPoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsTrackPoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_456_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsTrackPoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsTrackPoint G__TStRpsTrackPoint;
static int G__G__starmIRP_456_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsTrackPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsTrackPoint*) (soff+(sizeof(StRpsTrackPoint)*i)))->~G__TStRpsTrackPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsTrackPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsTrackPoint*) (soff))->~G__TStRpsTrackPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsPreTrackPoint */
static int G__G__starmIRP_457_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreTrackPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPreTrackPoint[n];
     } else {
       p = new((void*) gvp) StRpsPreTrackPoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPreTrackPoint;
     } else {
       p = new((void*) gvp) StRpsPreTrackPoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreTrackPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRpsPreTrackPoint(*(StRpsPreTrackPoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRpsPreTrackPoint(*(StRpsPreTrackPoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StRpsPreTrackPoint& obj = ((StRpsPreTrackPoint*) G__getstructoffset())->operator=(*(StRpsPreTrackPoint*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StRpsPreTrackPoint*) G__getstructoffset())->positionVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreTrackPoint*) G__getstructoffset())->rpId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreTrackPoint*) G__getstructoffset())->clusterId((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrackPoint*) G__getstructoffset())->time((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreTrackPoint*) G__getstructoffset())->quality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrackPoint*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrackPoint*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrackPoint*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrackPoint*) G__getstructoffset())->setPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrackPoint*) G__getstructoffset())->setRpId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrackPoint*) G__getstructoffset())->setClusterId((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrackPoint*) G__getstructoffset())->setQuality((StRpsPreTrackPoint::StRpsPreTrackPointQuality) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreTrackPoint*) G__getstructoffset())->planesUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrackPoint*) G__getstructoffset())->setTime((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsPreTrackPoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreTrackPoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsPreTrackPoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsPreTrackPoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrackPoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreTrackPoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPreTrackPoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreTrackPoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_457_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPreTrackPoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsPreTrackPoint G__TStRpsPreTrackPoint;
static int G__G__starmIRP_457_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsPreTrackPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsPreTrackPoint*) (soff+(sizeof(StRpsPreTrackPoint)*i)))->~G__TStRpsPreTrackPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsPreTrackPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsPreTrackPoint*) (soff))->~G__TStRpsPreTrackPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsTrack */
static int G__G__starmIRP_464_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsTrack[n];
     } else {
       p = new((void*) gvp) StRpsTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsTrack;
     } else {
       p = new((void*) gvp) StRpsTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRpsTrack(*(StRpsTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRpsTrack(*(StRpsTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StRpsTrack& obj = ((StRpsTrack*) G__getstructoffset())->operator=(*(StRpsTrack*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRpsTrack*) G__getstructoffset())->trackPoint((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StRpsTrack*) G__getstructoffset())->pVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsTrack*) G__getstructoffset())->branch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsTrack*) G__getstructoffset())->type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsTrack*) G__getstructoffset())->planesUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->theta((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->theta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->thetaRp((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->thetaRp());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->phiRp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->t((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->xi((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsTrack*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrack*) G__getstructoffset())->setTrackPoint((StRpsTrackPoint*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrack*) G__getstructoffset())->setP(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrack*) G__getstructoffset())->setBranch((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrack*) G__getstructoffset())->setType((StRpsTrack::StRpsTrackType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_464_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsTrack G__TStRpsTrack;
static int G__G__starmIRP_464_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsTrack*) (soff+(sizeof(StRpsTrack)*i)))->~G__TStRpsTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsTrack*) (soff))->~G__TStRpsTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsPreTrack */
static int G__G__starmIRP_465_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPreTrack[n];
     } else {
       p = new((void*) gvp) StRpsPreTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPreTrack;
     } else {
       p = new((void*) gvp) StRpsPreTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRpsPreTrack(*(StRpsPreTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRpsPreTrack(*(StRpsPreTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StRpsPreTrack& obj = ((StRpsPreTrack*) G__getstructoffset())->operator=(*(StRpsPreTrack*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRpsPreTrack*) G__getstructoffset())->trackPoint((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StRpsPreTrack*) G__getstructoffset())->pVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreTrack*) G__getstructoffset())->branch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreTrack*) G__getstructoffset())->type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreTrack*) G__getstructoffset())->planesUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->theta((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->theta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->thetaRp((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->thetaRp());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->phiRp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->t((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->xi((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreTrack*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrack*) G__getstructoffset())->setTrackPoint((StRpsPreTrackPoint*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrack*) G__getstructoffset())->setP(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrack*) G__getstructoffset())->setBranch((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrack*) G__getstructoffset())->setType((StRpsPreTrack::StRpsPreTrackType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsPreTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsPreTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsPreTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPreTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_465_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPreTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsPreTrack G__TStRpsPreTrack;
static int G__G__starmIRP_465_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsPreTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsPreTrack*) (soff+(sizeof(StRpsPreTrack)*i)))->~G__TStRpsPreTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsPreTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsPreTrack*) (soff))->~G__TStRpsPreTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsCollection */
static int G__G__starmIRP_477_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsCollection[n];
     } else {
       p = new((void*) gvp) StRpsCollection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsCollection;
     } else {
       p = new((void*) gvp) StRpsCollection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsCollection*) G__getstructoffset())->numberOfRomanPots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRpsCollection*) G__getstructoffset())->romanPot((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRpsCollection*) G__getstructoffset())->romanPot((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StRpsCluster*>* pobj;
         const vector<StRpsCluster*> xobj = ((const StRpsCollection*) G__getstructoffset())->clusters();
         pobj = new vector<StRpsCluster*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StRpsTrackPoint*>* pobj;
         const vector<StRpsTrackPoint*> xobj = ((const StRpsCollection*) G__getstructoffset())->trackPoints();
         pobj = new vector<StRpsTrackPoint*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StRpsTrack*>* pobj;
         const vector<StRpsTrack*> xobj = ((const StRpsCollection*) G__getstructoffset())->tracks();
         pobj = new vector<StRpsTrack*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsCollection*) G__getstructoffset())->siliconBunch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCollection*) G__getstructoffset())->setSiliconBunch((unsigned char) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCollection*) G__getstructoffset())->addTrackPoint((StRpsTrackPoint*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCollection*) G__getstructoffset())->addTrack((StRpsTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_477_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIRP_477_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StRpsCollection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StRpsCollection(*(StRpsCollection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsCollection G__TStRpsCollection;
static int G__G__starmIRP_477_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsCollection*) (soff+(sizeof(StRpsCollection)*i)))->~G__TStRpsCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsCollection*) (soff))->~G__TStRpsCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIRP_477_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsCollection* dest = (StRpsCollection*) G__getstructoffset();
   *dest = *(StRpsCollection*) libp->para[0].ref;
   const StRpsCollection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsPreCollection */
static int G__G__starmIRP_478_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPreCollection[n];
     } else {
       p = new((void*) gvp) StRpsPreCollection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPreCollection;
     } else {
       p = new((void*) gvp) StRpsPreCollection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRpsPreCollection(*(StRpsCollection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRpsPreCollection(*(StRpsCollection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsPreCollection*) G__getstructoffset())->siliconBunch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreCollection*) G__getstructoffset())->numberOfRomanPots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreCollection*) G__getstructoffset())->numberOfPlanesWithClusters((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreCollection*) G__getstructoffset())->adc((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreCollection*) G__getstructoffset())->tac((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsPreCollection*) G__getstructoffset())->status((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPreCollection*) G__getstructoffset())->numberOfPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->offsetPlane((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->zPlane((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->anglePlane((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StRpsPreCollection*) G__getstructoffset())->orientationPlane((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsPreCollection*) G__getstructoffset())->statusPlane((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreCollection*) G__getstructoffset())->numberOfClusters((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->positionCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->positionRMSCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StRpsPreCollection*) G__getstructoffset())->lengthCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->energyCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPreCollection*) G__getstructoffset())->xyCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsPreCollection*) G__getstructoffset())->qualityCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRpsPreCollection*) G__getstructoffset())->trackPoint((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRpsPreCollection*) G__getstructoffset())->track((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreCollection*) G__getstructoffset())->numberOfTrackPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRpsPreCollection*) G__getstructoffset())->numberOfTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsPreCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsPreCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsPreCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPreCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPreCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPreCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_478_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPreCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIRP_478_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StRpsPreCollection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StRpsPreCollection(*(StRpsPreCollection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsPreCollection G__TStRpsPreCollection;
static int G__G__starmIRP_478_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsPreCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsPreCollection*) (soff+(sizeof(StRpsPreCollection)*i)))->~G__TStRpsPreCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsPreCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsPreCollection*) (soff))->~G__TStRpsPreCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIRP_478_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPreCollection* dest = (StRpsPreCollection*) G__getstructoffset();
   *dest = *(StRpsPreCollection*) libp->para[0].ref;
   const StRpsPreCollection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsPlane */
static int G__G__starmIRP_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPlane[n];
     } else {
       p = new((void*) gvp) StRpsPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsPlane;
     } else {
       p = new((void*) gvp) StRpsPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPlane*) G__getstructoffset())->offset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPlane*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsPlane*) G__getstructoffset())->angle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StRpsPlane*) G__getstructoffset())->orientation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsPlane*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPlane*) G__getstructoffset())->numberOfClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPlane*) G__getstructoffset())->planeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsPlane*) G__getstructoffset())->romanPotId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRpsPlane*) G__getstructoffset())->cluster((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRpsPlane*) G__getstructoffset())->cluster((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StRpsCluster*>& obj = ((const StRpsPlane*) G__getstructoffset())->clusters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StRpsCluster*>& obj = ((StRpsPlane*) G__getstructoffset())->clusters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->addCluster((StRpsCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->setOffset((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->setZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->setAngle((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->setOrientation((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->setStatus((unsigned char) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_497_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIRP_497_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StRpsPlane* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StRpsPlane(*(StRpsPlane*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsPlane G__TStRpsPlane;
static int G__G__starmIRP_497_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsPlane*) (soff+(sizeof(StRpsPlane)*i)))->~G__TStRpsPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsPlane*) (soff))->~G__TStRpsPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIRP_497_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsPlane* dest = (StRpsPlane*) G__getstructoffset();
   *dest = *(StRpsPlane*) libp->para[0].ref;
   const StRpsPlane& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsCluster */
static int G__G__starmIRP_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsCluster[n];
     } else {
       p = new((void*) gvp) StRpsCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsCluster;
     } else {
       p = new((void*) gvp) StRpsCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRpsCluster(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (short) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (unsigned char) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) StRpsCluster(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (short) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (unsigned char) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsCluster*) G__getstructoffset())->position());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsCluster*) G__getstructoffset())->positionRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StRpsCluster*) G__getstructoffset())->length());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsCluster*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRpsCluster*) G__getstructoffset())->xy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsCluster*) G__getstructoffset())->quality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsCluster*) G__getstructoffset())->romanPotId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsCluster*) G__getstructoffset())->planeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->setPosition((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->setPositionRMS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->setLength((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->setEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->setXY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->setQuality((unsigned char) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_498_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIRP_498_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StRpsCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StRpsCluster(*(StRpsCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsCluster G__TStRpsCluster;
static int G__G__starmIRP_498_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsCluster*) (soff+(sizeof(StRpsCluster)*i)))->~G__TStRpsCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsCluster*) (soff))->~G__TStRpsCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIRP_498_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsCluster* dest = (StRpsCluster*) G__getstructoffset();
   *dest = *(StRpsCluster*) libp->para[0].ref;
   const StRpsCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRpsRomanPot */
static int G__G__starmIRP_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsRomanPot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsRomanPot[n];
     } else {
       p = new((void*) gvp) StRpsRomanPot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRpsRomanPot;
     } else {
       p = new((void*) gvp) StRpsRomanPot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsRomanPot*) G__getstructoffset())->romanPotId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsRomanPot*) G__getstructoffset())->numberOfPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsRomanPot*) G__getstructoffset())->numberOfPlanesWithClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsRomanPot*) G__getstructoffset())->adc((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRpsRomanPot*) G__getstructoffset())->tac((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRpsRomanPot*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRpsRomanPot*) G__getstructoffset())->plane((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRpsRomanPot*) G__getstructoffset())->plane((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsRomanPot*) G__getstructoffset())->setStatus((unsigned char) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsRomanPot*) G__getstructoffset())->setAdc((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsRomanPot*) G__getstructoffset())->setTac((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRpsRomanPot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsRomanPot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRpsRomanPot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRpsRomanPot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRpsRomanPot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsRomanPot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsRomanPot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRpsRomanPot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIRP_499_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRpsRomanPot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIRP_499_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StRpsRomanPot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StRpsRomanPot(*(StRpsRomanPot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRpsRomanPot G__TStRpsRomanPot;
static int G__G__starmIRP_499_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRpsRomanPot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRpsRomanPot*) (soff+(sizeof(StRpsRomanPot)*i)))->~G__TStRpsRomanPot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRpsRomanPot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRpsRomanPot*) (soff))->~G__TStRpsRomanPot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIRP_499_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRpsRomanPot* dest = (StRpsRomanPot*) G__getstructoffset();
   *dest = *(StRpsRomanPot*) libp->para[0].ref;
   const StRpsRomanPot& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StRpsTrackPoint */

/* StRpsPreTrackPoint */

/* StRpsTrack */

/* StRpsPreTrack */

/* StRpsCollection */

/* StRpsPreCollection */

/* StRpsPlane */

/* StRpsCluster */

/* StRpsRomanPot */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__starmIRP {
 public:
  G__Sizep2memfuncG__starmIRP(): p(&G__Sizep2memfuncG__starmIRP::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__starmIRP::*p)();
};

size_t G__get_sizep2memfuncG__starmIRP()
{
  G__Sizep2memfuncG__starmIRP a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__starmIRP() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint))) {
     StRpsTrackPoint *G__Lderived;
     G__Lderived=(StRpsTrackPoint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint))) {
     StRpsPreTrackPoint *G__Lderived;
     G__Lderived=(StRpsPreTrackPoint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack))) {
     StRpsTrack *G__Lderived;
     G__Lderived=(StRpsTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack))) {
     StRpsPreTrack *G__Lderived;
     G__Lderived=(StRpsPreTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection))) {
     StRpsCollection *G__Lderived;
     G__Lderived=(StRpsCollection*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection))) {
     StRpsPreCollection *G__Lderived;
     G__Lderived=(StRpsPreCollection*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane))) {
     StRpsPlane *G__Lderived;
     G__Lderived=(StRpsPlane*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster))) {
     StRpsCluster *G__Lderived;
     G__Lderived=(StRpsCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot))) {
     StRpsRomanPot *G__Lderived;
     G__Lderived=(StRpsRomanPot*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot),G__get_linked_tagnum(&G__G__starmIRPLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__starmIRP() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIRPLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StRpsPreTrackPoint*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StRpsPreTrack*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<StRpsTrackPoint*,StRpsPreTrackPoint*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_maplEStRpsTrackPointmUcOStRpsPreTrackPointmUcOlesslEStRpsTrackPointmUgRcOallocatorlEpairlEStRpsTrackPointmUsPconstcOStRpsPreTrackPointmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<StRpsTrackPoint*,StRpsPreTrackPoint*,less<StRpsTrackPoint*> >",117,G__get_linked_tagnum(&G__G__starmIRPLN_maplEStRpsTrackPointmUcOStRpsPreTrackPointmUcOlesslEStRpsTrackPointmUgRcOallocatorlEpairlEStRpsTrackPointmUsPconstcOStRpsPreTrackPointmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StRpsCluster*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StRpsTrackPoint*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StRpsTrack*>",117,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StRpsTrackPoint */
static void G__setup_memvarStRpsTrackPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint));
   { StRpsTrackPoint *p; p=(StRpsTrackPoint*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality),-1,-2,1,G__FastAllocString(2048).Format("rpsNormal=%lldLL",(long long)StRpsTrackPoint::rpsNormal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality),-1,-2,1,G__FastAllocString(2048).Format("rpsGolden=%lldLL",(long long)StRpsTrackPoint::rpsGolden).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality),-1,-2,1,G__FastAllocString(2048).Format("rpsNotSet=%lldLL",(long long)StRpsTrackPoint::rpsNotSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfPmtsInRp=%lldLL",(long long)StRpsTrackPoint::mNumberOfPmtsInRp).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfPlanesInRp=%lldLL",(long long)StRpsTrackPoint::mNumberOfPlanesInRp).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRpId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mClusterId[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mTime[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TVector3),-1,-1,4,"mPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality),-1,-1,4,"mQuality=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsPreTrackPoint */
static void G__setup_memvarStRpsPreTrackPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint));
   { StRpsPreTrackPoint *p; p=(StRpsPreTrackPoint*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality),-1,-2,1,G__FastAllocString(2048).Format("rpsNormal=%lldLL",(long long)StRpsPreTrackPoint::rpsNormal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality),-1,-2,1,G__FastAllocString(2048).Format("rpsGolden=%lldLL",(long long)StRpsPreTrackPoint::rpsGolden).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality),-1,-2,1,G__FastAllocString(2048).Format("rpsNotSet=%lldLL",(long long)StRpsPreTrackPoint::rpsNotSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfPmtsInRp=%lldLL",(long long)StRpsPreTrackPoint::mNumberOfPmtsInRp).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfPlanesInRp=%lldLL",(long long)StRpsPreTrackPoint::mNumberOfPlanesInRp).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TVector3),-1,-1,2,"mPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mRpId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mClusterId[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality),-1,-1,2,"mQuality=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mTime[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsTrack */
static void G__setup_memvarStRpsTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack));
   { StRpsTrack *p; p=(StRpsTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType),-1,-2,1,G__FastAllocString(2048).Format("rpsLocal=%lldLL",(long long)StRpsTrack::rpsLocal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType),-1,-2,1,G__FastAllocString(2048).Format("rpsGlobal=%lldLL",(long long)StRpsTrack::rpsGlobal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType),-1,-2,1,G__FastAllocString(2048).Format("rpsUndefined=%lldLL",(long long)StRpsTrack::rpsUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(2048).Format("rpsAngleThetaX=%lldLL",(long long)StRpsTrack::rpsAngleThetaX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(2048).Format("rpsAngleThetaY=%lldLL",(long long)StRpsTrack::rpsAngleThetaY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(2048).Format("rpsAngleTheta=%lldLL",(long long)StRpsTrack::rpsAngleTheta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfAngleTypes=%lldLL",(long long)StRpsTrack::mNumberOfAngleTypes).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfStationsInBranch=%lldLL",(long long)StRpsTrack::mNumberOfStationsInBranch).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR),G__defined_typename("vector<StRpsTrackPoint*>"),-1,4,"mTrackPoints=",0,"StPtrVecRpsTrackPoint mTrackPoints;	 // pointers to track points (local tracks)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TVector3),-1,-1,4,"mP=",0,"three-vector with reconstructed track momentum");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mBranch=",0,"detectors branch, EU=0, ED=1, WU=2, WD=3 ");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType),-1,-1,4,"mType=",0,"type of the track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsPreTrack */
static void G__setup_memvarStRpsPreTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack));
   { StRpsPreTrack *p; p=(StRpsPreTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType),-1,-2,1,G__FastAllocString(2048).Format("rpsLocal=%lldLL",(long long)StRpsPreTrack::rpsLocal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType),-1,-2,1,G__FastAllocString(2048).Format("rpsGlobal=%lldLL",(long long)StRpsPreTrack::rpsGlobal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType),-1,-2,1,G__FastAllocString(2048).Format("rpsUndefined=%lldLL",(long long)StRpsPreTrack::rpsUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles),-1,-2,1,G__FastAllocString(2048).Format("rpsAngleThetaX=%lldLL",(long long)StRpsPreTrack::rpsAngleThetaX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles),-1,-2,1,G__FastAllocString(2048).Format("rpsAngleThetaY=%lldLL",(long long)StRpsPreTrack::rpsAngleThetaY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles),-1,-2,1,G__FastAllocString(2048).Format("rpsAngleTheta=%lldLL",(long long)StRpsPreTrack::rpsAngleTheta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfAngleTypes=%lldLL",(long long)StRpsPreTrack::mNumberOfAngleTypes).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfStationsInBranch=%lldLL",(long long)StRpsPreTrack::mNumberOfStationsInBranch).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TRef),-1,-1,2,"mTrackPoints[2]=",0,"reference to track points (local tracks)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TVector3),-1,-1,2,"mP=",0,"three-vector with reconstructed track momentum");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mBranch=",0,"detectors branch, EU=0, ED=1, WU=2, WD=3 ");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType),-1,-1,2,"mType=",0,"type of the track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsCollection */
static void G__setup_memvarStRpsCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection));
   { StRpsCollection *p; p=(StRpsCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollectioncLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mNumberOfRomanPots=%lldLL",(long long)StRpsCollection::mNumberOfRomanPots).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot),-1,-1,4,"mRomanPots[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mSiliconBunch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR),G__defined_typename("vector<StRpsTrackPoint*>"),-1,4,"mTrackPoints=",0,"StSPtrVecRpsTrackPoint mTrackPoints;");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR),G__defined_typename("vector<StRpsTrack*>"),-1,4,"mTracks=",0,"StSPtrVecRpsTrack mTracks;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsPreCollection */
static void G__setup_memvarStRpsPreCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection));
   { StRpsPreCollection *p; p=(StRpsPreCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollectioncLcLdA),-1,-2,4,"mNumberOfRomanPot=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollectioncLcLdA),-1,-2,4,"mNumberOfPlanes=4LL",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"mSiliconBunch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNumberPlanes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNumberPlanesWithClusters[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"mStatusRomanPot[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mADC[8][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTAC[8][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mOffsetPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mzPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mAnglePlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,4,"mOrientationPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"mStatusPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNumberOfClusters[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"mPositionCluster[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"mPositionRMSCluster[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"mLengthCluster[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"mEnergyCluster[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"mXYCluster[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),G__defined_typename("vector<unsigned char>"),-1,4,"mQualityCluster[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR),G__defined_typename("vector<StRpsPreTrackPoint*>"),-1,4,"mTrackPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR),G__defined_typename("vector<StRpsPreTrack*>"),-1,4,"mTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_maplEStRpsTrackPointmUcOStRpsPreTrackPointmUcOlesslEStRpsTrackPointmUgRcOallocatorlEpairlEStRpsTrackPointmUsPconstcOStRpsPreTrackPointmUgRsPgRsPgR),G__defined_typename("map<StRpsTrackPoint*,StRpsPreTrackPoint*>"),-1,4,"mTrackPointsMap=",0,"! ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsPlane */
static void G__setup_memvarStRpsPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane));
   { StRpsPlane *p; p=(StRpsPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mPlaneId=",0,"0-3");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mOrientation=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mRomanPotId=",0,"0-7");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR),G__defined_typename("vector<StRpsCluster*>"),-1,2,"mClusters=",0,"StSPtrVecRpsCluster mClusters;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsCluster */
static void G__setup_memvarStRpsCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster));
   { StRpsCluster *p; p=(StRpsCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mPositionRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mQuality=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mPlaneId=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mRomanPotId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRpsRomanPot */
static void G__setup_memvarStRpsRomanPot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot));
   { StRpsRomanPot *p; p=(StRpsRomanPot*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPotcLcLdA),-1,-2,2,"mNumberOfPlanes=4LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane),-1,-1,2,"mPlanes[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mRomanPotId=",0,"0-7");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"mAdc[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"mTac[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIRPLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__starmIRP() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStRpsTrackPoint(void) {
   /* StRpsTrackPoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint));
   G__memfunc_setup("StRpsTrackPoint",1531,G__G__starmIRP_456_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRpsTrackPoint",1531,G__G__starmIRP_456_0_2, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint), -1, 0, 1, 1, 1, 0, "u 'StRpsTrackPoint' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__starmIRP_456_0_3, 117, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint), -1, 1, 1, 1, 1, 0, "u 'StRpsTrackPoint' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionVec",1171,G__G__starmIRP_456_0_4, 117, G__get_linked_tagnum(&G__G__starmIRPLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rpId",399,G__G__starmIRP_456_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clusterId",943,G__G__starmIRP_456_0_6, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__G__starmIRP_456_0_7, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quality",777,G__G__starmIRP_456_0_8, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planesUsed",1044,G__G__starmIRP_456_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__G__starmIRP_456_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__starmIRP_456_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__starmIRP_456_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__G__starmIRP_456_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpId",699,G__G__starmIRP_456_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - rpId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterId",1243,G__G__starmIRP_456_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - clusterId h - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__G__starmIRP_456_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - timeVal h - - 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__G__starmIRP_456_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StRpsTrackPoint::StRpsTrackPointQuality' - 0 - quality", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_456_0_18, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsTrackPoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_456_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsTrackPoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_456_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsTrackPoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_456_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsTrackPoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_456_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_456_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsTrackPoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_456_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsTrackPoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_456_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsTrackPoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_456_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsTrackPoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRpsTrackPoint", 1657, G__G__starmIRP_456_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsPreTrackPoint(void) {
   /* StRpsPreTrackPoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint));
   G__memfunc_setup("StRpsPreTrackPoint",1826,G__G__starmIRP_457_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRpsPreTrackPoint",1826,G__G__starmIRP_457_0_2, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint), -1, 0, 1, 1, 1, 0, "u 'StRpsPreTrackPoint' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__starmIRP_457_0_3, 117, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint), -1, 1, 1, 1, 1, 0, "u 'StRpsPreTrackPoint' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionVec",1171,G__G__starmIRP_457_0_4, 117, G__get_linked_tagnum(&G__G__starmIRPLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rpId",399,G__G__starmIRP_457_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clusterId",943,G__G__starmIRP_457_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "h - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__G__starmIRP_457_0_7, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quality",777,G__G__starmIRP_457_0_8, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__G__starmIRP_457_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__starmIRP_457_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__starmIRP_457_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__G__starmIRP_457_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpId",699,G__G__starmIRP_457_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rpId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterId",1243,G__G__starmIRP_457_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - clusterId h - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__G__starmIRP_457_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StRpsPreTrackPoint::StRpsPreTrackPointQuality' - 0 - quality", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planesUsed",1044,G__G__starmIRP_457_0_16, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__G__starmIRP_457_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - timeVal h - - 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_457_0_18, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsPreTrackPoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_457_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreTrackPoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_457_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsPreTrackPoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_457_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsPreTrackPoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_457_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_457_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreTrackPoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_457_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPreTrackPoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_457_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreTrackPoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_457_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPreTrackPoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRpsPreTrackPoint", 1952, G__G__starmIRP_457_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsTrack(void) {
   /* StRpsTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack));
   G__memfunc_setup("StRpsTrack",1009,G__G__starmIRP_464_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRpsTrack",1009,G__G__starmIRP_464_0_2, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack), -1, 0, 1, 1, 1, 0, "u 'StRpsTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__starmIRP_464_0_3, 117, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrack), -1, 1, 1, 1, 1, 0, "u 'StRpsTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackPoint",1055,G__G__starmIRP_464_0_4, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackPoint), -1, 0, 1, 1, 1, 8, "h - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pVec",398,G__G__starmIRP_464_0_5, 117, G__get_linked_tagnum(&G__G__starmIRPLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("branch",622,G__G__starmIRP_464_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,G__G__starmIRP_464_0_7, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planesUsed",1044,G__G__starmIRP_464_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__G__starmIRP_464_0_9, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 'rpsAngleTheta' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaRp",728,G__G__starmIRP_464_0_10, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 'rpsAngleTheta' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__G__starmIRP_464_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", "return mP.phi();", (void*) NULL, 0);
   G__memfunc_setup("phiRp",515,G__G__starmIRP_464_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__G__starmIRP_464_0_13, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - beamMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xi",225,G__G__starmIRP_464_0_14, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - beamMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__G__starmIRP_464_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", "return mP.mag();", (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__G__starmIRP_464_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", "return mP.perp();", (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__G__starmIRP_464_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", "return mP.pseudoRapidity();", (void*) NULL, 0);
   G__memfunc_setup("time",431,G__G__starmIRP_464_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPoint",1355,G__G__starmIRP_464_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StRpsTrackPoint' - 0 - trackPoint h - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP",412,G__G__starmIRP_464_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - P", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBranch",922,G__G__starmIRP_464_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__G__starmIRP_464_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StRpsTrack::StRpsTrackType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_464_0_23, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_464_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_464_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_464_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_464_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_464_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_464_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_464_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_464_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRpsTrack", 1135, G__G__starmIRP_464_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsPreTrack(void) {
   /* StRpsPreTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack));
   G__memfunc_setup("StRpsPreTrack",1304,G__G__starmIRP_465_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRpsPreTrack",1304,G__G__starmIRP_465_0_2, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack), -1, 0, 1, 1, 1, 0, "u 'StRpsPreTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__starmIRP_465_0_3, 117, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack), -1, 1, 1, 1, 1, 0, "u 'StRpsPreTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackPoint",1055,G__G__starmIRP_465_0_4, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint), -1, 0, 1, 1, 1, 9, "h - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pVec",398,G__G__starmIRP_465_0_5, 117, G__get_linked_tagnum(&G__G__starmIRPLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("branch",622,G__G__starmIRP_465_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,G__G__starmIRP_465_0_7, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planesUsed",1044,G__G__starmIRP_465_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__G__starmIRP_465_0_9, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 'rpsAngleTheta' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaRp",728,G__G__starmIRP_465_0_10, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 'rpsAngleTheta' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__G__starmIRP_465_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiRp",515,G__G__starmIRP_465_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__G__starmIRP_465_0_13, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - beamMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xi",225,G__G__starmIRP_465_0_14, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - beamMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__G__starmIRP_465_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__G__starmIRP_465_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__G__starmIRP_465_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__G__starmIRP_465_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPoint",1355,G__G__starmIRP_465_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StRpsPreTrackPoint' - 0 - trackPoint h - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP",412,G__G__starmIRP_465_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - P", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBranch",922,G__G__starmIRP_465_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__G__starmIRP_465_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StRpsPreTrack::StRpsPreTrackType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_465_0_23, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsPreTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_465_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_465_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsPreTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_465_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsPreTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_465_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_465_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_465_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPreTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_465_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_465_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPreTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRpsPreTrack", 1430, G__G__starmIRP_465_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsCollection(void) {
   /* StRpsCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection));
   G__memfunc_setup("StRpsCollection",1544,G__G__starmIRP_477_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfRomanPots",1761,G__G__starmIRP_477_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("romanPot",848,G__G__starmIRP_477_0_3, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("romanPot",848,G__G__starmIRP_477_0_4, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clusters",885,G__G__starmIRP_477_0_5, 117, G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR), G__defined_typename("vector<StRpsCluster*>"), 0, 0, 1, 1, 8, "", "StPtrVecRpsCluster clusters() const;", (void*) NULL, 0);
   G__memfunc_setup("trackPoints",1170,G__G__starmIRP_477_0_6, 117, G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR), G__defined_typename("vector<StRpsTrackPoint*>"), 0, 0, 1, 1, 8, "", "StPtrVecRpsTrackPoint trackPoints() const;", (void*) NULL, 0);
   G__memfunc_setup("tracks",648,G__G__starmIRP_477_0_7, 117, G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR), G__defined_typename("vector<StRpsTrack*>"), 0, 0, 1, 1, 8, "", "StPtrVecRpsTrack tracks() const;", (void*) NULL, 0);
   G__memfunc_setup("siliconBunch",1249,G__G__starmIRP_477_0_8, 98, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSiliconBunch",1549,G__G__starmIRP_477_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrackPoint",1320,G__G__starmIRP_477_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StRpsTrackPoint' - 0 - trackPoint", "void addTrackPoint(const StRpsTrackPoint*);", (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__G__starmIRP_477_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StRpsTrack' - 0 - track", "void addTrack(const StRpsTrack*);", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_477_0_12, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_477_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_477_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_477_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_477_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_477_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_477_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_477_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_477_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsCollection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StRpsCollection", 1544, G__G__starmIRP_477_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection), -1, 0, 1, 1, 1, 0, "u 'StRpsCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StRpsCollection", 1670, G__G__starmIRP_477_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIRP_477_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCollection), -1, 1, 1, 1, 1, 0, "u 'StRpsCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsPreCollection(void) {
   /* StRpsPreCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection));
   G__memfunc_setup("StRpsPreCollection",1839,G__G__starmIRP_478_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRpsPreCollection",1839,G__G__starmIRP_478_0_2, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection), -1, 0, 1, 1, 1, 0, "u 'StRpsCollection' - 11 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("siliconBunch",1249,G__G__starmIRP_478_0_3, 98, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfRomanPots",1761,G__G__starmIRP_478_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPlanesWithClusters",2706,G__G__starmIRP_478_0_5, 104, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - romanPotId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adc",296,G__G__starmIRP_478_0_6, 104, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tac",312,G__G__starmIRP_478_0_7, 104, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__starmIRP_478_0_8, 98, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - romanPotId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPlanes",1441,G__G__starmIRP_478_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offsetPlane",1143,G__G__starmIRP_478_0_10, 100, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zPlane",618,G__G__starmIRP_478_0_11, 100, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("anglePlane",1015,G__G__starmIRP_478_0_12, 100, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orientationPlane",1692,G__G__starmIRP_478_0_13, 115, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusPlane",1172,G__G__starmIRP_478_0_14, 98, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfClusters",1683,G__G__starmIRP_478_0_15, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionCluster",1623,G__G__starmIRP_478_0_16, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId "
"i - - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionRMSCluster",1865,G__G__starmIRP_478_0_17, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId "
"i - - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lengthCluster",1380,G__G__starmIRP_478_0_18, 115, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId "
"i - - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyCluster",1388,G__G__starmIRP_478_0_19, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId "
"i - - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xyCluster",979,G__G__starmIRP_478_0_20, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId "
"i - - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("qualityCluster",1515,G__G__starmIRP_478_0_21, 98, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - romanPotId i - - 0 - planeId "
"i - - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackPoint",1055,G__G__starmIRP_478_0_22, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("track",533,G__G__starmIRP_478_0_23, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrack), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfTrackPoints",1968,G__G__starmIRP_478_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfTracks",1446,G__G__starmIRP_478_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrackPoint",1320,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreTrackPoint), -1, 0, 1, 1, 4, 0, "U 'StRpsTrackPoint' - 0 - tp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_478_0_27, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsPreCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_478_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_478_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsPreCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_478_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsPreCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_478_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_478_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_478_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPreCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_478_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPreCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_478_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPreCollection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StRpsPreCollection", 1839, G__G__starmIRP_478_0_39, (int) ('i'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection), -1, 0, 1, 1, 1, 0, "u 'StRpsPreCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StRpsPreCollection", 1965, G__G__starmIRP_478_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIRP_478_0_41, (int) ('u'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPreCollection), -1, 1, 1, 1, 1, 0, "u 'StRpsPreCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsPlane(void) {
   /* StRpsPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane));
   G__memfunc_setup("StRpsPlane",1004,G__G__starmIRP_497_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offset",647,G__G__starmIRP_497_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__starmIRP_497_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__G__starmIRP_497_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orientation",1196,G__G__starmIRP_497_0_5, 115, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__starmIRP_497_0_6, 98, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfClusters",1683,G__G__starmIRP_497_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planeId",701,G__G__starmIRP_497_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("romanPotId",1021,G__G__starmIRP_497_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cluster",770,G__G__starmIRP_497_0_10, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cluster",770,G__G__starmIRP_497_0_11, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clusters",885,G__G__starmIRP_497_0_12, 117, G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR), G__defined_typename("vector<StRpsCluster*>"), 1, 0, 1, 1, 9, "", "const StSPtrVecRpsCluster& clusters() const;", (void*) NULL, 0);
   G__memfunc_setup("clusters",885,G__G__starmIRP_497_0_13, 117, G__get_linked_tagnum(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR), G__defined_typename("vector<StRpsCluster*>"), 1, 0, 1, 1, 0, "", "StSPtrVecRpsCluster&       clusters();", (void*) NULL, 0);
   G__memfunc_setup("addCluster",1035,G__G__starmIRP_497_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StRpsCluster' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOffset",947,G__G__starmIRP_497_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__G__starmIRP_497_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAngle",819,G__G__starmIRP_497_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOrientation",1496,G__G__starmIRP_497_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__G__starmIRP_497_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlaneId",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRomanPotId",1321,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_497_0_22, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_497_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_497_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_497_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_497_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_497_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_497_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_497_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_497_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsPlane::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StRpsPlane", 1004, G__G__starmIRP_497_0_34, (int) ('i'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane), -1, 0, 1, 1, 1, 0, "u 'StRpsPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StRpsPlane", 1130, G__G__starmIRP_497_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIRP_497_0_36, (int) ('u'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane), -1, 1, 1, 1, 1, 0, "u 'StRpsPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsCluster(void) {
   /* StRpsCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster));
   G__memfunc_setup("StRpsCluster",1246,G__G__starmIRP_498_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRpsCluster",1246,G__G__starmIRP_498_0_2, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster), -1, 0, 6, 1, 1, 0, 
"d - - 0 - pos d - - 0 - posRMS "
"s - - 0 - len d - - 0 - e "
"d - - 0 - xy b - - 0 - qual", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("position",885,G__G__starmIRP_498_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionRMS",1127,G__G__starmIRP_498_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("length",642,G__G__starmIRP_498_0_5, 115, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__G__starmIRP_498_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xy",241,G__G__starmIRP_498_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quality",777,G__G__starmIRP_498_0_8, 98, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("romanPotId",1021,G__G__starmIRP_498_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planeId",701,G__G__starmIRP_498_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__G__starmIRP_498_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPositionRMS",1427,G__G__starmIRP_498_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLength",942,G__G__starmIRP_498_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__G__starmIRP_498_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXY",509,G__G__starmIRP_498_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__G__starmIRP_498_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlaneId",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRomanPotId",1321,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_498_0_19, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_498_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_498_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_498_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_498_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_498_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_498_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_498_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_498_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StRpsCluster", 1246, G__G__starmIRP_498_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster), -1, 0, 1, 1, 1, 0, "u 'StRpsCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StRpsCluster", 1372, G__G__starmIRP_498_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIRP_498_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsCluster), -1, 1, 1, 1, 1, 0, "u 'StRpsCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRpsRomanPot(void) {
   /* StRpsRomanPot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot));
   G__memfunc_setup("StRpsRomanPot",1324,G__G__starmIRP_499_0_1, 105, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("romanPotId",1021,G__G__starmIRP_499_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPlanes",1441,G__G__starmIRP_499_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPlanesWithClusters",2706,G__G__starmIRP_499_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adc",296,G__G__starmIRP_499_0_5, 104, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tac",312,G__G__starmIRP_499_0_6, 104, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__starmIRP_499_0_7, 98, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plane",528,G__G__starmIRP_499_0_8, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plane",528,G__G__starmIRP_499_0_9, 85, G__get_linked_tagnum(&G__G__starmIRPLN_StRpsPlane), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__G__starmIRP_499_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdc",596,G__G__starmIRP_499_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - - h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTac",612,G__G__starmIRP_499_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - - h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRomanPotId",1321,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIRP_499_0_14, 85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRpsRomanPot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIRP_499_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsRomanPot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIRP_499_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRpsRomanPot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIRP_499_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRpsRomanPot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIRPLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIRP_499_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIRP_499_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsRomanPot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIRP_499_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsRomanPot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIRP_499_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRpsRomanPot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIRP_499_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRpsRomanPot::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StRpsRomanPot", 1324, G__G__starmIRP_499_0_26, (int) ('i'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot), -1, 0, 1, 1, 1, 0, "u 'StRpsRomanPot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StRpsRomanPot", 1450, G__G__starmIRP_499_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIRP_499_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__starmIRPLN_StRpsRomanPot), -1, 1, 1, 1, 1, 0, "u 'StRpsRomanPot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__starmIRP() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__starmIRP() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__starmIRP() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__starmIRPLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrackPoint = { "StRpsTrackPoint" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrackPoint = { "StRpsPreTrackPoint" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality = { "StRpsPreTrackPoint::StRpsPreTrackPointQuality" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrackPointcLcLdA = { "StRpsPreTrackPoint::$" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrack = { "StRpsTrack" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrack = { "StRpsPreTrack" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType = { "StRpsPreTrack::StRpsPreTrackType" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles = { "StRpsPreTrack::StRpsPreAngles" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreTrackcLcLdA = { "StRpsPreTrack::$" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsCollection = { "StRpsCollection" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreCollection = { "StRpsPreCollection" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPreCollectioncLcLdA = { "StRpsPreCollection::$" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR = { "vector<StRpsPreTrackPoint*,allocator<StRpsPreTrackPoint*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StRpsPreTrackPoint*,allocator<StRpsPreTrackPoint*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR = { "vector<StRpsPreTrack*,allocator<StRpsPreTrack*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StRpsPreTrack*,allocator<StRpsPreTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_maplEStRpsTrackPointmUcOStRpsPreTrackPointmUcOlesslEStRpsTrackPointmUgRcOallocatorlEpairlEStRpsTrackPointmUsPconstcOStRpsPreTrackPointmUgRsPgRsPgR = { "map<StRpsTrackPoint*,StRpsPreTrackPoint*,less<StRpsTrackPoint*>,allocator<pair<StRpsTrackPoint* const,StRpsPreTrackPoint*> > >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsPlane = { "StRpsPlane" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsCluster = { "StRpsCluster" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsRomanPot = { "StRpsRomanPot" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR = { "vector<StRpsCluster*,allocator<StRpsCluster*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StRpsCluster*,allocator<StRpsCluster*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsRomanPotcLcLdA = { "StRpsRomanPot::$" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality = { "StRpsTrackPoint::StRpsTrackPointQuality" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrackPointcLcLdA = { "StRpsTrackPoint::$" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType = { "StRpsTrack::StRpsTrackType" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles = { "StRpsTrack::StRpsAngles" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsTrackcLcLdA = { "StRpsTrack::$" , 101 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR = { "vector<StRpsTrackPoint*,allocator<StRpsTrackPoint*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StRpsTrackPoint*,allocator<StRpsTrackPoint*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR = { "vector<StRpsTrack*,allocator<StRpsTrack*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StRpsTrack*,allocator<StRpsTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIRPLN_StRpsCollectioncLcLdA = { "StRpsCollection::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__starmIRP() {
  G__G__starmIRPLN_TClass.tagnum = -1 ;
  G__G__starmIRPLN_TBuffer.tagnum = -1 ;
  G__G__starmIRPLN_TMemberInspector.tagnum = -1 ;
  G__G__starmIRPLN_TObject.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__starmIRPLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__starmIRPLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__starmIRPLN_TVector3.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrackPoint.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrackPoint.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrackPointcLcLdA.tagnum = -1 ;
  G__G__starmIRPLN_TRef.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrack.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrack.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreTrackcLcLdA.tagnum = -1 ;
  G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__starmIRPLN_StRpsCollection.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreCollection.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPreCollectioncLcLdA.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_maplEStRpsTrackPointmUcOStRpsPreTrackPointmUcOlesslEStRpsTrackPointmUgRcOallocatorlEpairlEStRpsTrackPointmUsPconstcOStRpsPreTrackPointmUgRsPgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_StRpsPlane.tagnum = -1 ;
  G__G__starmIRPLN_StRpsCluster.tagnum = -1 ;
  G__G__starmIRPLN_StRpsRomanPot.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_StRpsRomanPotcLcLdA.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrackPointcLcLdA.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles.tagnum = -1 ;
  G__G__starmIRPLN_StRpsTrackcLcLdA.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR.tagnum = -1 ;
  G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIRPLN_StRpsCollectioncLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__starmIRP() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrackPoint),sizeof(StRpsTrackPoint),-1,294656,(char*)NULL,G__setup_memvarStRpsTrackPoint,G__setup_memfuncStRpsTrackPoint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrackPoint),sizeof(StRpsPreTrackPoint),-1,294656,(char*)NULL,G__setup_memvarStRpsPreTrackPoint,G__setup_memfuncStRpsPreTrackPoint);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrackPointcLcLStRpsPreTrackPointQuality);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrackPointcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_TRef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrack),sizeof(StRpsTrack),-1,294656,(char*)NULL,G__setup_memvarStRpsTrack,G__setup_memfuncStRpsTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrack),sizeof(StRpsPreTrack),-1,294656,(char*)NULL,G__setup_memvarStRpsPreTrack,G__setup_memfuncStRpsPreTrack);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreTrackType);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrackcLcLStRpsPreAngles);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreTrackcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsCollection),sizeof(StRpsCollection),-1,292096,(char*)NULL,G__setup_memvarStRpsCollection,G__setup_memfuncStRpsCollection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreCollection),sizeof(StRpsPreCollection),-1,324864,(char*)NULL,G__setup_memvarStRpsPreCollection,G__setup_memfuncStRpsPreCollection);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPreCollectioncLcLdA);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackPointmUcOallocatorlEStRpsPreTrackPointmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsPreTrackmUcOallocatorlEStRpsPreTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_maplEStRpsTrackPointmUcOStRpsPreTrackPointmUcOlesslEStRpsTrackPointmUgRcOallocatorlEpairlEStRpsTrackPointmUsPconstcOStRpsPreTrackPointmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsPlane),sizeof(StRpsPlane),-1,292096,(char*)NULL,G__setup_memvarStRpsPlane,G__setup_memfuncStRpsPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsCluster),sizeof(StRpsCluster),-1,324864,(char*)NULL,G__setup_memvarStRpsCluster,G__setup_memfuncStRpsCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsRomanPot),sizeof(StRpsRomanPot),-1,292096,(char*)NULL,G__setup_memvarStRpsRomanPot,G__setup_memfuncStRpsRomanPot);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsClustermUcOallocatorlEStRpsClustermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsRomanPotcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrackPointcLcLStRpsTrackPointQuality);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrackPointcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrackcLcLStRpsTrackType);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrackcLcLStRpsAngles);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsTrackcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackPointmUcOallocatorlEStRpsTrackPointmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_vectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_reverse_iteratorlEvectorlEStRpsTrackmUcOallocatorlEStRpsTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIRPLN_StRpsCollectioncLcLdA);
}
extern "C" void G__cpp_setupG__starmIRP(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__starmIRP()");
  G__set_cpp_environmentG__starmIRP();
  G__cpp_setup_tagtableG__starmIRP();

  G__cpp_setup_inheritanceG__starmIRP();

  G__cpp_setup_typetableG__starmIRP();

  G__cpp_setup_memvarG__starmIRP();

  G__cpp_setup_memfuncG__starmIRP();
  G__cpp_setup_globalG__starmIRP();
  G__cpp_setup_funcG__starmIRP();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__starmIRP();
  return;
}
class G__cpp_setup_initG__starmIRP {
  public:
    G__cpp_setup_initG__starmIRP() { G__add_setup_func("G__starmIRP",(G__incsetup)(&G__cpp_setupG__starmIRP)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__starmIRP() { G__remove_setup_func("G__starmIRP"); }
};
G__cpp_setup_initG__starmIRP G__cpp_setup_initializerG__starmIRP;

